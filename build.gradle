plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = [
            	'app/main',
                'src/backoffice/analytics/src',
                'src/ic/creditrequest/src',
                'src/ic/flowengine/src'
            ]
        }
        resources {
            srcDirs = ['app/resources']
        }
    }
    test {
        java {
            srcDirs = [
               	'src/backoffice/analytics/test',
                'src/ic/creditrequest/test',
                'src/ic/flowengine/test'
            ]
        }
    }
}

springBoot {
    mainClass.set("app.main.InstantCreditV0Application")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	//implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.flywaydb:flyway-core'
	//implementation 'org.flywaydb:flyway-mysql'
	implementation 'org.springframework.kafka:spring-kafka'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	//testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//testImplementation 'org.junit.jupiter:junit-jupiter-api'
    //testImplementation 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.named('test') {
	useJUnitPlatform()
}
